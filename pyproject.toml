[project]
name = "sarc"
version = "0.1.0"
description = "Surveillance et analyse des ressources de calcul"
authors = [{ name = "Mila-IDT" }]
requires-python = "==3.11.*"
readme = "README.md"
dependencies = [
    "fabric>=3.0.0,<4",
    "prometheus-api-client>=0.5.2,<0.6",
    "pydantic>=1.10.4,<2",
    "pydantic-mongo>=1.0.1,<2",
    "pymongo>=4.3.3,<5",
    "numpy>=1.24.0,<2",
    "ldap3>=2.9.1,<3",
    "python-hostlist>=1.23.0,<2",
    "tqdm>=4.64.1,<5",
    "flatten-dict>=0.4.2,<0.5",
    "simple-parsing>=0.1.0,<0.2",
    "sphinx>=6.2.1,<7",
    "myst-parser>=2.0.0,<3",
    "sphinx-rtd-theme>=3.0.2,<4",
    "nbsphinx>=0.9.3,<0.10",
    "opentelemetry-api>=1.23.0,<2",
    "opentelemetry-sdk>=1.23.0,<2",
    "requests-mock>=1.11.0,<2",
    "pandas< 2.1.0",
    "gifnoc>=0.4.2,<0.5",
    "watchdog>=6,<7",
    "python-dateutil>=2.9.0.post0,<3",
    "opentelemetry-exporter-otlp>=1.23.0,<2",
]

[project.scripts]
sarc = "sarc.cli:main"

[dependency-groups]
dev = [
    "black>= 22.12.0",
    "pylint>= 2.15.10",
    "isort>= 5.11.4",
    "mypy>= 0.991",
    "pytest>= 7.2.1",
    "pytest-cov>= 4.0.0",
    "pytest-regressions>= 2.4.2",
    "tox>= 4.4.5",
    "pytest-freezegun>= 0.4.2",
    "fabric[testing]>=3.0.0,<4",
    "pytest-timeout>=2.1.0,<3",
    "pytest-custom-exit-code>= 0.3.0",
    "coverage>=7.2.7,<8",
    "pytest-xdist>=3.3.1,<4",
    "jupyter>=1.0.0,<2",
    "tabulate>=0.9.0,<0.10",
    "tox-uv>=1.25.0",
    "pytest-httpserver>=1.1.0",
]
examples = ["seaborn>=0.13.2,<0.14"]

[tool.uv]
default-groups = [
    "dev",
    "examples",
]

[tool.hatch.build.targets.sdist]
include = ["sarc"]

[tool.hatch.build.targets.wheel]
include = ["sarc"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest]
norecursedirs = "tests/common"

[tool.pylint]
ignore-paths = []
disable = [
    "no-self-argument",  # Pydantic validators don't have one
    "too-few-public-methods",  # Triggered on Pydantic models
    "import-outside-toplevel",  # These imports are useful to reduce loading times
    "too-many-arguments",
    "too-many-locals",
    "too-many-positional-arguments",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "invalid-name",
    "no-else-return",  # Bad rule IMO (- OB)
    "line-too-long",  # Black takes care of line length.
    "logging-fstring-interpolation",
    "duplicate-code",
    "too-many-positional-arguments",
]
extension-pkg-whitelist = "pydantic"

[tool.isort]
profile = "black"
